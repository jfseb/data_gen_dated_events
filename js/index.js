"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const fs = require("fs");
const Helpers = require("./helpers");
const { exit } = require('process');
const core_1 = require("@js-joda/core");
const seedrandom = require("seedrandom");
var rnd = seedrandom("first", { global: true });
var NRPERS = 2;
var d1 = core_1.LocalDate.of(2020, 1, 6);
var d1Idx = Helpers.dateToDayIndex(d1);
var d2 = core_1.LocalDate.of(2024, 6, 1);
var d2Idx = Helpers.dateToDayIndex(d2);
var deltaTime = d2Idx - d1Idx;
var LocationsObj = { "NewYork": 5,
    "LA": 5,
    "Chicago": 5,
    "Berlin": 2,
    "Frankfurt": 2,
    "Bangalore": 2,
    "SFO": 1
};
var pars = {
    AVG_NEXT: 300,
    LOCCHANGE: 0.5,
    FTECHANGE: 0.5,
    L_EVENT: 0.7,
    L_HIRE: 0.5,
    locations: Helpers.makeMap(LocationsObj),
    firstDate: d1,
    lastDate: d2,
    random: seedrandom('next')
};
var NRPERS = 2;
var writeStream = fs.createWriteStream('result.csv');
Helpers.writeHeader(writeStream);
for (var p = 1; p < NRPERS; ++p) {
    Helpers.genPerson(writeStream, p, pars);
}
writeStream.on('finish', () => {
    console.log('Wrote data to file');
});
writeStream.end();

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHlCQUF5QjtBQUN6QixxQ0FBcUM7QUFFckMsTUFBTSxFQUFFLElBQUksRUFBRSxHQUFHLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQztBQUVwQyx3Q0FBMEM7QUFFMUMseUNBQXlDO0FBRXpDLElBQUksR0FBRyxHQUFHLFVBQVUsQ0FBQyxPQUFPLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQztBQUVoRCxJQUFJLE1BQU0sR0FBQyxDQUFDLENBQUM7QUFHYixJQUFJLEVBQUUsR0FBRyxnQkFBUyxDQUFDLEVBQUUsQ0FBQyxJQUFJLEVBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2hDLElBQUksS0FBSyxHQUFHLE9BQU8sQ0FBQyxjQUFjLENBQUMsRUFBRSxDQUFDLENBQUM7QUFDdkMsSUFBSSxFQUFFLEdBQUcsZ0JBQVMsQ0FBQyxFQUFFLENBQUMsSUFBSSxFQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQztBQUNoQyxJQUFJLEtBQUssR0FBRyxPQUFPLENBQUMsY0FBYyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBQ3ZDLElBQUksU0FBUyxHQUFHLEtBQUssR0FBQyxLQUFLLENBQUM7QUFFNUIsSUFBSSxZQUFZLEdBQUcsRUFBRSxTQUFTLEVBQUcsQ0FBQztJQUNoQyxJQUFJLEVBQUcsQ0FBQztJQUNSLFNBQVMsRUFBRyxDQUFDO0lBQ2IsUUFBUSxFQUFHLENBQUM7SUFDWixXQUFXLEVBQUcsQ0FBQztJQUNmLFdBQVcsRUFBSSxDQUFDO0lBQ2hCLEtBQUssRUFBRyxDQUFDO0NBQ1YsQ0FBQztBQUVGLElBQUksSUFBSSxHQUFHO0lBQ1YsUUFBUSxFQUFHLEdBQUc7SUFDZCxTQUFTLEVBQUcsR0FBRztJQUNmLFNBQVMsRUFBRyxHQUFHO0lBQ2YsT0FBTyxFQUFHLEdBQUc7SUFDYixNQUFNLEVBQUcsR0FBRztJQUNaLFNBQVMsRUFBRyxPQUFPLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQztJQUN6QyxTQUFTLEVBQUcsRUFBRTtJQUNkLFFBQVEsRUFBSSxFQUFFO0lBQ2QsTUFBTSxFQUFHLFVBQVUsQ0FBQyxNQUFNLENBQUM7Q0FDTixDQUFDO0FBRXZCLElBQUksTUFBTSxHQUFDLENBQUMsQ0FBQztBQUNiLElBQUksV0FBVyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxZQUFZLENBQUMsQ0FBQztBQUNyRCxPQUFPLENBQUMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0FBQ2pDLEtBQUksSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxNQUFNLEVBQUUsRUFBRSxDQUFDLEVBQUU7SUFDOUIsT0FBTyxDQUFDLFNBQVMsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO0NBQ3pDO0FBRUQsV0FBVyxDQUFDLEVBQUUsQ0FBQyxRQUFRLEVBQUUsR0FBRyxFQUFFO0lBQzVCLE9BQU8sQ0FBQyxHQUFHLENBQUMsb0JBQW9CLENBQUMsQ0FBQztBQUNwQyxDQUFDLENBQUMsQ0FBQztBQUNILFdBQVcsQ0FBQyxHQUFHLEVBQUUsQ0FBQyIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGZzIGZyb20gJ2ZzJztcclxuaW1wb3J0ICogYXMgSGVscGVycyBmcm9tICcuL2hlbHBlcnMnO1xyXG5cclxuY29uc3QgeyBleGl0IH0gPSByZXF1aXJlKCdwcm9jZXNzJyk7XHJcblxyXG5pbXBvcnQge0xvY2FsRGF0ZSB9IGZyb20gIFwiQGpzLWpvZGEvY29yZVwiO1xyXG5cclxuaW1wb3J0ICogYXMgc2VlZHJhbmRvbSBmcm9tICdzZWVkcmFuZG9tJztcclxuXHJcbnZhciBybmQgPSBzZWVkcmFuZG9tKFwiZmlyc3RcIiwgeyBnbG9iYWw6IHRydWUgfSk7XHJcblxyXG52YXIgTlJQRVJTPTI7XHJcblxyXG5cclxudmFyIGQxID0gTG9jYWxEYXRlLm9mKDIwMjAsMSw2KTtcclxudmFyIGQxSWR4ID0gSGVscGVycy5kYXRlVG9EYXlJbmRleChkMSk7XHJcbnZhciBkMiA9IExvY2FsRGF0ZS5vZigyMDI0LDYsMSk7XHJcbnZhciBkMklkeCA9IEhlbHBlcnMuZGF0ZVRvRGF5SW5kZXgoZDIpO1xyXG52YXIgZGVsdGFUaW1lID0gZDJJZHgtZDFJZHg7XHJcblxyXG52YXIgTG9jYXRpb25zT2JqID0geyBcIk5ld1lvcmtcIiA6IDUsXHJcbiAgXCJMQVwiIDogNSxcclxuICBcIkNoaWNhZ29cIiA6IDUsXHJcbiAgXCJCZXJsaW5cIiA6IDIsXHJcbiAgXCJGcmFua2Z1cnRcIiA6IDIsXHJcbiAgXCJCYW5nYWxvcmVcIiA6ICAyLFxyXG4gIFwiU0ZPXCIgOiAxXHJcbn07XHJcblxyXG52YXIgcGFycyA9IHtcclxuIEFWR19ORVhUIDogMzAwLFxyXG4gTE9DQ0hBTkdFIDogMC41LFxyXG4gRlRFQ0hBTkdFIDogMC41LFxyXG4gTF9FVkVOVCA6IDAuNyxcclxuIExfSElSRSA6IDAuNSxcclxuIGxvY2F0aW9ucyA6IEhlbHBlcnMubWFrZU1hcChMb2NhdGlvbnNPYmopLFxyXG4gZmlyc3REYXRlIDogZDEsXHJcbiBsYXN0RGF0ZSAgOiBkMixcclxuIHJhbmRvbSA6IHNlZWRyYW5kb20oJ25leHQnKVxyXG59IGFzIEhlbHBlcnMuR2VuUGFyYW1zO1xyXG5cclxudmFyIE5SUEVSUz0yO1xyXG52YXIgd3JpdGVTdHJlYW0gPSBmcy5jcmVhdGVXcml0ZVN0cmVhbSgncmVzdWx0LmNzdicpO1xyXG5IZWxwZXJzLndyaXRlSGVhZGVyKHdyaXRlU3RyZWFtKTtcclxuZm9yKHZhciBwID0gMTsgcCA8IE5SUEVSUzsgKytwKSB7XHJcbiAgSGVscGVycy5nZW5QZXJzb24od3JpdGVTdHJlYW0sIHAsIHBhcnMpO1xyXG59XHJcblxyXG53cml0ZVN0cmVhbS5vbignZmluaXNoJywgKCkgPT4ge1xyXG4gIGNvbnNvbGUubG9nKCdXcm90ZSBkYXRhIHRvIGZpbGUnKTtcclxufSk7XHJcbndyaXRlU3RyZWFtLmVuZCgpO1xyXG5cclxuIl19
